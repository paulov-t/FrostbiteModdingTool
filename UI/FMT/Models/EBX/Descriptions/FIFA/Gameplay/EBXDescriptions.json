{
	"Descriptions": [
		{
			"TypeName": "FloatCurvePoint",
			"Properties": [
				{
					"PropertyName": "X",
					"Description": "The plot on the X axis (must be above MinX and below MaxX)"
				},
				{
					"PropertyName": "Y",
					"Description": "The plot on the Y axis (must be above MinX and below MaxX)"
				}
			]
		},
		{
			"TypeName": "FloatCurve",
			"Properties": [
				{
					"PropertyName": "MinX",
					"Description": "The minimum plot on the X axis"
				},
				{
					"PropertyName": "MaxX",
					"Description": "The maximum plot on the X axis"
				},
				{
					"PropertyName": "MinY",
					"Description": "The minimum plot on the Y axis"
				},
				{
					"PropertyName": "MaxY",
					"Description": "The maximum plot on the Y axis"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_actor_movement",
			"Properties": [
				{
					"PropertyName": "AnimationPlaybackTimeRatioBlocks",
					"Description": "The speed ratio (higher is slower) of the default animation by ability"
				},
				{
					"PropertyName": "AnimationPlaybackTimeRatioDribbling",
					"Description": "The speed ratio (higher is slower) of the default animation by ability"
				},
				{
					"PropertyName": "AnimationPlaybackTimeRatioDribblingPP",
					"Description": "The speed ratio (higher is slower) of the default animation by ability"
				},
				{
					"PropertyName": "AnimationPlaybackTimeRatioPassing",
					"Description": "The speed ratio (higher is slower) of the default animation by ability"
				},
				{
					"PropertyName": "AnimationPlaybackTimeRatioShooting",
					"Description": "The speed ratio (higher is slower) of the default animation by ability"
				},
				{
					"PropertyName": "ATTR_AnimationPlaybackTimeRatioScaleByHeight",
					"Description": "The speed ratio (higher is slower) of the default animation by ability. X = Height in Feet, Y = Ratio"
				},
				{
					"PropertyName": "ATTR_DribbleJogSpeedModifier",
					"Description": "Modifies base dribble jog speed based on attributes"
				},
				{
					"PropertyName": "ATTR_ReactionTimeRate",
					"Description": "The heigher this value, the less time it will take for the player to react to input"
				},
				{
					"PropertyName": "DribbleTrapMinBranchTimeAfterContactEasy",
					"Description": "Dribbling/Trapping Min BranchTime after contact in easiest context"
				},
				{
					"PropertyName": "DribbleFootStepBranchMaxDelayTimeBest",
					"Description": "Dribbling Max delay time after contact to weight for a foot step (Time for best player)"
				},
				{
					"PropertyName": "DribbleFootStepBranchMaxDelayTimeBase",
					"Description": "Dribbling Max delay time after contact to weight for a foot step (Time for base player)"
				},
				{
					"PropertyName": "DribbleFootStepBranchDelayTimeAttribBase",
					"Description": "Dribbling Max delay time after contact to weight for a foot step (Player Attibute to use the base attribute player)"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_cpuai_cpuaiballhandler",
			"Properties": [
				{
					"PropertyName": "CrossReceiverDistFromPKSpot",
					"Description": "Maximum distance a player may be from the pk spot in order to be considered as a cross receiver. Increasing this value will make it more likely that a player will do a cross."
				},
				{
					"PropertyName": "DribbleTTDistToTargetWeight",
					"Description": "When deciding where to dribble the player will use this value to determine how important it is to get to the attack position (penalty spot or good corner kick position). This value is AttackPace dependant."
				},
				{
					"PropertyName": "GroundPassDecisionDistToTargetMod",
					"Description": "Bonus given to the dribbler's distance to target rating when considering a ground pass to gain position. Increasing this value will make it less likely that the dribbler will pass. Connected to everything starting wtih GroundPassDecision and TraitSelfishGroundPassDecision."
				},
				{
					"PropertyName": "GroundPassDecisionDribbleMinSpace",
					"Description": "The cuttoff point for the dribbler's space rating at which he will try and get rid of the ball. Increasing this value will make it more likely that the dribbler will pass as soon as opponents get closer to him. Connected to everything starting wtih GroundPassDecision and TraitSelfishGroundPassDecision."
				},
				{
					"PropertyName": "GroundPassDecisionMinCourseSafety",
					"Description": "Minimum course safety rating of the pass needed for the ball handler to pass when considering a ground pass to gain position. Increasing this value will make it less likely that the dribbler will pass. Connected to everything starting wtih GroundPassDecision and TraitSelfishGroundPassDecision."
				},
				{
					"PropertyName": "GroundPassDecisionSpaceRatingMod",
					"Description": "Bonus given to the dribbler's space rating when considering a ground pass to gain position. Increasing this value will make it less likely that the dribbler will pass. Connected to everything starting wtih GroundPassDecision and TraitSelfishGroundPassDecision."
				},
				{
					"PropertyName": "ThroughPassMod",
					"Description": "Modification to the safety needed to perform a through pass instead of a regular pass. Increasing this value will make it less likely that the player will perform a through pass."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_cpuai_crossingdecision",
			"Properties": [
				{
					"PropertyName": "crossingDefensiveCoverReductionMax",
					"Description": "With random chance, we will reduce the defensive cover for the cross evaluation.\r\nWe will reduce the cover more if the possessor is in good position to make the cross.\r\n\r\nx axis - dice roll\r\ny axis - reduction multiplier"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_cpuai_dribbledecision",
			"Properties": [
				{
					"PropertyName": "dribbleAggressivenessByDistFromAttackingGoalForMaxSkill",
					"Description": "This graph represent the dribble aggressiveness for a player with the best dribbling skills depending on the distance from the attacking goal (X coordinates wise)\r\n\r\nx axis - distance to the attacking goal weight (0 - close 1 - far)\r\ny axis - aggressiveness (0 - safe dribble 1 - tackign on defenders)\r\n"
				},
				{
					"PropertyName": "dribbleAggressivenessByDistFromAttackingGoalForMinSkill",
					"Description": "This graph represent the dribble aggressiveness for a player with the worst dribbling skills depending on the distance from the attacking goal (X coordinates wise)\r\n\r\nx axis - distance to the attacking goal weight (0 - close 1 - far)\r\ny axis - aggressiveness (0 - safe dribble 1 - tackign on defenders)\r\n"
				},
				{
					"PropertyName": "dribbleAggressivenessByDistFromAttackingGoalMappingCurve",
					"Description": "This is mapping curve between dribbleAggressivenessByDistFromAttackingGoalForMaxSkill and dribbleAggressivenessByDistFromAttackingGoalForMinSkill.\r\n\r\nx axis - dribbling attribute (0 .. 1)\r\ny axis - mapping value "
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_kickpass_cross",
			"Properties": [
				{
					"PropertyName": "PASS_CrossDistanceFromPowerBar_FAR",
					"Description": "x = power bar (0 to 1)\r\ny = distance to target (in yards).\r\n\r\nuses this value when PASS_CrossDistanceGraphBlendRate is 1"
				},
				{
					"PropertyName": "PASS_CrossPenVsDistOutsideBox",
					"Description": "Cross receiver score penalty as a function of distance outside the box. For receiver selection logic."
				},
				{
					"PropertyName": "PASS_LeadingAngleBaseScoreCrossLofted",
					"Description": "[0] = FarLead\r\n[1] = NearLead\r\n[2] = NearLead\r\n[3] = NearLead\r\n[4] = FarLead\r\n[5] = FarLead\r\n[6] = FarLead/2\r\n[7] = FarLead/2\r\n[8] = StopPos\r\n[9] = (minLead + StopPos)/2"
				},
				{
					"PropertyName": "PASS_LeadingAngleBaseScoreCrossLow",
					"Description": "[0] = FarLead\r\n[1] = NearLead\r\n[2] = NearLead\r\n[3] = NearLead\r\n[4] = FarLead\r\n[5] = FarLead\r\n[6] = FarLead/2\r\n[7] = FarLead/2\r\n[8] = StopPos\r\n[9] = (minLead + StopPos)/2"
				},
				{
					"PropertyName": "PASS_LeadingAngleBaseScoreCrossGround",
					"Description": "[0] = FarLead\r\n[1] = NearLead\r\n[2] = NearLead\r\n[3] = NearLead\r\n[4] = FarLead\r\n[5] = FarLead\r\n[6] = FarLead/2\r\n[7] = FarLead/2\r\n[8] = StopPos\r\n[9] = (minLead + StopPos)/2"
				},
				{
					"PropertyName": "PASS_DistanceFromCentreNormalCrossCloseInYards",
					"Description": "Distance (in yards) from the centre (towards the back post).  If ball's bounce point is beyond this distance, then we'll use the timing in PASS_TravelTimeNormalCrossClose.  Otherwise, use PASS_TravelTimeNormalCross."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_kickpass_passing",
			"Properties": [
				{
					"PropertyName": "PASS_FanOpennessScalarVsAttribute",
					"Description": "x: pass angle relative to facing\r\ny:scales the openness score as a function of attribute"
				},
				{
					"PropertyName": "PASS_FanFirstTimeScalarVsAngle",
					"Description": "x: pass angle relative to facing\r\ny:scales the spread of the fan for avoidance"
				},
				{
					"PropertyName": "PASS_FanScalarVsAngle",
					"Description": "x: pass angle relative to facing\r\ny:scales the spread of the fan for avoidance for non-first time passes."
				},
				{
					"PropertyName": "PASS_FanScalarVsAttribute",
					"Description": "x: attribute of player\r\ny:scales the spread of the fan for avoidance for non-first time passes."
				},
				{
					"PropertyName": "PASS_FanScalarVsVision",
					"Description": "How much the Fan avoidance is scaled as a function of how visible the target is"
				},
				{
					"PropertyName": "PASS_FanScoreVsBlockRate",
					"Description": "x: input value\r\ny: score"
				},
				{
					"PropertyName": "PASS_FanScoreVsThreat",
					"Description": "x: input value\r\ny: score"
				},
				{
					"PropertyName": "PASS_FanScoreVsVision",
					"Description": "x: input value\r\ny: score"
				},
				{
					"PropertyName": "PASS_ThroughScoreAngleScalar",
					"Description": "Scales the surface score as a function of angle error from player position. +ve is in front of the player"
				},
				{
					"PropertyName": "PASS_ThroughScoreDistVsSpeed",
					"Description": "Scales of the distance of the optimimum aimtarget in front of the receiver as a function of attacking speed. Product of this and PASS_ThroughScoreTargetDistance is used."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_goalkeeper_goalkeeper",
			"Properties": [
				{
					"PropertyName": "GK_Positioning_ReadCrossTrajectoryTime_PointGraph",
					"Description": "Time it takes keeper to read a crossing trajectory before going for a looseball\r\nX axis: Distance from ball when kicked (in feet)\r\nY axis: Time to read trajectory (in ticks)"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_positioning_perception",
			"Properties": [
				{
					"PropertyName": "attackerInfoUpdateIntervalMin",
					"Description": "This is the minumum interval to update the attacker's information that the defender is marking.\r\n\r\nx axis - marking attribute\r\ny axis - minimum marking interval (ai ticks)"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_physics_soccerball",
			"Properties": [

				{
					"PropertyName": "BallRestitutionMaxSpeed",
					"Description": "This governs what the max speed is where the restitution will be reduced by the max amount"
				},
				{
					"PropertyName": "BallRestitutionMinSpeed",
					"Description": "This governs when the ball restitution is at its max amount"
				},
				{
					"PropertyName": "BallRestitutionReductionMax",
					"Description": "This governs how much restitution is lost at max speed"
				},
				{
					"PropertyName": "Soccerball_GripConstant",
					"Description": "how much the ball grips the ground on a contact.\r\n1.0 is just enough grip to go into rolling mode, and never more.\r\n0.5 is super ball levels of grip.\r\n0.92 is default."
				},
				{
					"PropertyName": "Soccerball_Inertia",
					"Description": "The inertia constant of the soccerball. Default = 0.4"
				},
				{
					"PropertyName": "Soccerball_Mass",
					"Description": "The mass of the soccerball. Default 0.454"
				},
				{
					"PropertyName": "Soccerball_Material",
					"Description": "0 - Resitution\r\n1 - NOT USED Sliding Static Friction\r\n2 - Sliding Dynamic Friction\r\n3 - NOT USED Spinning Static Friction\r\n4 - Spinning Dynamic Friction\r\n5 - NOT USED Rolling Static Friction\r\n6 - Rolling Dynamic Friction\r\n\r\nRestitution determines how much energy is lost (how high the ball bounces) after the collision.  (0 means no bounce, 1 means no loss).  The minimum restitution of the two objects colliding is used.\r\n\r\nSliding friction determines how much of the ball's speed at the point of contact (not at its center) is converted into spin.  A low number will mean the ball will skip along the ground and maintain its old spin.  A high number will mean the ball will grip the ground and gain a new spin.  \r\n\r\nSpinning friction affects how the ball's spin around the contact normal (ie. around it's Y axis) will slow down over time.  \r\n\r\nRolling friction determines how the balls speed and roll will slow down over time."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_physics_touchcontacts",
			"Properties": [
				{
					"PropertyName": "Soccerball_GripConstant",
					"Description": "how much the ball grips the ground on a contact.\r\n1.0 is just enough grip to go into rolling mode, and never more.\r\n0.5 is super ball levels of grip.\r\n0.92 is default."
				},
				{
					"PropertyName": "normal_max_clamp",
					"Description": "Intentional lower pitch range of the asset normal.  Contact assets will clamp any normals below this range."
				},
				{
					"PropertyName": "contact_velocity_min",
					"Description": "Acceptable magnitude difference between animation contact velocity and desired contact velocity in contact normal."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_kickerror_passshotcontexteffect",
			"Properties": [
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_Attribute_ReduceRate",
					"Description": "How much we scale the difficulty as a function of attribute"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_TouchPart_BackHeel_Modifier",
					"Description": "Modifier on the final difficulty of each miss type for this touch part, 1.0f will have no change.\r\n\r\n0 = MISS_TYPE_UPPER_HIT\r\n1 = MISS_TYPE_LOWER_HIT\r\n2 = MISS_TYPE_LEFT_SIDE_HIT\r\n3 = MISS_TYPE_RIGHT_SIDE_HIT,\r\n4 = MISS_TYPE_LEFT_DIRECTION_MISS,\r\n5 = MISS_TYPE_RIGHT_DIRECTION_MISS,\r\n6 = MISS_TYPE_OVER_HIT,\r\n7 = MISS_TYPE_UNDER_HIT"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_TouchPart_Head_Modifier",
					"Description": "Modifier on the final difficulty of each miss type for this touch part, 1.0f will have no change.\r\n\r\n0 = MISS_TYPE_UPPER_HIT\r\n1 = MISS_TYPE_LOWER_HIT\r\n2 = MISS_TYPE_LEFT_SIDE_HIT\r\n3 = MISS_TYPE_RIGHT_SIDE_HIT,\r\n4 = MISS_TYPE_LEFT_DIRECTION_MISS,\r\n5 = MISS_TYPE_RIGHT_DIRECTION_MISS,\r\n6 = MISS_TYPE_OVER_HIT,\r\n7 = MISS_TYPE_UNDER_HIT"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_TouchPart_InsideFoot_Modifier",
					"Description": "Modifier on the final difficulty of each miss type for this touch part, 1.0f will have no change.\r\n\r\n0 = MISS_TYPE_UPPER_HIT\r\n1 = MISS_TYPE_LOWER_HIT\r\n2 = MISS_TYPE_LEFT_SIDE_HIT\r\n3 = MISS_TYPE_RIGHT_SIDE_HIT,\r\n4 = MISS_TYPE_LEFT_DIRECTION_MISS,\r\n5 = MISS_TYPE_RIGHT_DIRECTION_MISS,\r\n6 = MISS_TYPE_OVER_HIT,\r\n7 = MISS_TYPE_UNDER_HIT"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_TouchPart_InsideFootTop_Modifier",
					"Description": "Modifier on the final difficulty of each miss type for this touch part, 1.0f will have no change.\r\n\r\n0 = MISS_TYPE_UPPER_HIT\r\n1 = MISS_TYPE_LOWER_HIT\r\n2 = MISS_TYPE_LEFT_SIDE_HIT\r\n3 = MISS_TYPE_RIGHT_SIDE_HIT,\r\n4 = MISS_TYPE_LEFT_DIRECTION_MISS,\r\n5 = MISS_TYPE_RIGHT_DIRECTION_MISS,\r\n6 = MISS_TYPE_OVER_HIT,\r\n7 = MISS_TYPE_UNDER_HIT"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_TouchPart_Laces_Modifier",
					"Description": "Modifier on the final difficulty of each miss type for this touch part, 1.0f will have no change.\r\n\r\n0 = MISS_TYPE_UPPER_HIT\r\n1 = MISS_TYPE_LOWER_HIT\r\n2 = MISS_TYPE_LEFT_SIDE_HIT\r\n3 = MISS_TYPE_RIGHT_SIDE_HIT,\r\n4 = MISS_TYPE_LEFT_DIRECTION_MISS,\r\n5 = MISS_TYPE_RIGHT_DIRECTION_MISS,\r\n6 = MISS_TYPE_OVER_HIT,\r\n7 = MISS_TYPE_UNDER_HIT"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_TouchPart_OutsideFoot_Modifier",
					"Description": "Modifier on the final difficulty of each miss type for this touch part, 1.0f will have no change.\r\n\r\n0 = MISS_TYPE_UPPER_HIT\r\n1 = MISS_TYPE_LOWER_HIT\r\n2 = MISS_TYPE_LEFT_SIDE_HIT\r\n3 = MISS_TYPE_RIGHT_SIDE_HIT,\r\n4 = MISS_TYPE_LEFT_DIRECTION_MISS,\r\n5 = MISS_TYPE_RIGHT_DIRECTION_MISS,\r\n6 = MISS_TYPE_OVER_HIT,\r\n7 = MISS_TYPE_UNDER_HIT"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_TouchPart_Toe_Modifier",
					"Description": "Modifier on the final difficulty of each miss type for this touch part, 1.0f will have no change.\r\n\r\n0 = MISS_TYPE_UPPER_HIT\r\n1 = MISS_TYPE_LOWER_HIT\r\n2 = MISS_TYPE_LEFT_SIDE_HIT\r\n3 = MISS_TYPE_RIGHT_SIDE_HIT,\r\n4 = MISS_TYPE_LEFT_DIRECTION_MISS,\r\n5 = MISS_TYPE_RIGHT_DIRECTION_MISS,\r\n6 = MISS_TYPE_OVER_HIT,\r\n7 = MISS_TYPE_UNDER_HIT"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_WeakFoot",
					"Description": "NO LONGER USED"
				},
				{
					"PropertyName": "PASSSHOT_CONTEXTEFFECT_WeakFoot_Difficulty",
					"Description": "NO LONGER USED"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_rules_foul_playercontactscore",
			"Properties": [
				{
					"PropertyName": "PenaltyModifiersCollisionResult",
					"Description": "Penalty modifiers for Collision Result Type:\r\n0:None 1:StumbleVeryHeavy 2:StumbleHeavy 3:StumbleMediumStrong 4:StumbleMedium 5:StumbleMediumLight 6:StumbleLight 7:ForceFall 8:ForceBallTouchCanceled"
				},
				{
					"PropertyName": "PenaltyModifiersCollisionPartArms",
					"Description": "Penalty modifiers for Collision Part [Arms vs.]:\r\n0:Foot 1:Calf 2:Thigh 3:Hips 4:Torso 5:Head"
				},
				{
					"PropertyName": "PenaltyModifiersCollisionPartCalf",
					"Description": "Penalty modifiers for Collision Part [Calf vs.]:\r\n0:Foot 1:Calf 2:Thigh 3:Hips 4:Torso 5:Head"
				},
				{
					"PropertyName": "PenaltyModifiersCollisionPartFoot",
					"Description": "Penalty modifiers for Collision Part [Foot vs.]:\r\n0:Foot 1:Calf 2:Thigh 3:Hips 4:Torso 5:Head"
				},
				{
					"PropertyName": "PenaltyModifiersCollisionPartHead",
					"Description": "Penalty modifiers for Collision Part [Head vs.]:\r\n0:Foot 1:Calf 2:Thigh 3:Hips 4:Torso 5:Head"
				},
				{
					"PropertyName": "PenaltyModifiersCollisionPartHips",
					"Description": "Penalty modifiers for Collision Part [Hips vs.]:\r\n0:Foot 1:Calf 2:Thigh 3:Hips 4:Torso 5:Head"
				},
				{
					"PropertyName": "PenaltyModifiersCollisionPartThigh",
					"Description": "Penalty modifiers for Collision Part [Thigh vs.]:\r\n0:Foot 1:Calf 2:Thigh 3:Hips 4:Torso 5:Head"
				},
				{
					"PropertyName": "PenaltyModifiersCollisionPartTorso",
					"Description": "Penalty modifiers for Collision Part [Torso vs.]:\r\n0:Foot 1:Calf 2:Thigh 3:Hips 4:Torso 5:Head"
				},
				{
					"PropertyName": "PenaltyModifiersTackleAngle",
					"Description": "Penalty modifiers for Tackle Angle:\r\n0:Behind 1:BehindSide 2:Side 3:ForwardSide 4:Forward 5:Dummy"
				},
				{
					"PropertyName": "PenaltyWeightsStandTackle",
					"Description": "Penalty weights for Stand Tackle:\r\n0:CollisionResult 1:CollisionIntensity 2:CollisionPart 3:TackleAngle"
				},
				{
					"PropertyName": "PenaltyWeightsSlideTackle",
					"Description": "Penalty weights for Slide Tackle:\r\n0:CollisionResult 1:CollisionIntensity 2:CollisionPart 3:TackleAngle"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_kickcommon_pccanimselectionthresholds",
			"Properties": [
				{
					"PropertyName": "PASS_SynergyThreshold_HighPower",
					"Description": "if the requested kick speed is higher than this (in m/s) then it will use a high power asset."
				},
				{
					"PropertyName": "PASS_SynergyThreshold_LowPower",
					"Description": "if the requested kick speed is less than this (in m/s) then it will use a low power asset."
				},
				{
					"PropertyName": "PASS_SynergyThreshold_VeryLowPower",
					"Description": "if the requested kick speed is less than this (in m/s) then it will use a low power asset, and an additionally allow the very low power assets."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_kickcommon_animselectionthresholds",
			"Properties": [
				{
					"PropertyName": "PASS_SynergyThreshold_DeflectRate",
					"Description": "Percentage of current ball speed that is substracted from the ball out speed when deciding which power anim to use.  ie: if this number is high, we are more likely to choose a low power to redirect a ball."
				},
				{
					"PropertyName": "PASS_SynergyThreshold_HighPower",
					"Description": "if the requested kick speed is higher than this (in m/s) then it will use a high power asset."
				},
				{
					"PropertyName": "PASS_SynergyThreshold_LowPower",
					"Description": "if the requested kick speed is less than this (in m/s) then it will use a low power asset."
				},
				{
					"PropertyName": "PASS_SynergyThreshold_VeryLowPower",
					"Description": "if the requested kick speed is less than this (in m/s) then it will use a low power asset, and an additionally allow the very low power assets."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_player_injury",
			"Properties": [
				{
					"PropertyName": "ATTR_InjuryProbabilityModifierByAngle",
					"Description": "Much different gap angle makes more likely higher injury probability."
				},
				{
					"PropertyName": "ATTR_InjuryProbabilityModifierByFatigue",
					"Description": "Injury probability rate based on fatigue level.\r\nThis value is used for multiplier of force."
				},
				{
					"PropertyName": "ATTR_InjuryProbabilityModifierByTraits",
					"Description": "If player has injury prone traits, this value will muiltiply to probability value."
				},
				{
					"PropertyName": "Injury_AOGPowerKickInjuryProbabilityByFatigue",
					"Description": "Injury Probability of Power Kick based on the long time fatigue"
				},
				{
					"PropertyName": "Injury_AOGSprintInjuryProbabilityByFatigue",
					"Description": "Injury Probability of Long Time Sprint based on the long time fatigue"
				},
				{
					"PropertyName": "Injury_AOGStretchInjuryProbabilityByFatigue",
					"Description": "Injury Probability of Stretch Kick based on the long time fatigue"
				},
				{
					"PropertyName": "Injury_LongTermFatigueInjuryProbability",
					"Description": "Long term fatigue injury probability for...\r\n0 - PULLED_CALF\r\n1 - PULLED_QUAD\r\n2 - PULLED_HAM\r\n3 - PULLED_GROIN\r\n4 - PULLED_HIP_FLEXOR\r\n5 - TORN_CALF\r\n6 - TORN_QUAD\r\n7 - TORN_HAM\r\n8 - TORN_GROIN\r\n9 - TORN_HIP_FLEXOR\r\n\r\nLow probability [0.0 .. 1.0] High probability"
				},
				{
					"PropertyName": "Injury_LongTermFatigueThresholds",
					"Description": "Long term fatigue threshold for...\r\n0 - PULLED_CALF\r\n1 - PULLED_QUAD\r\n2 - PULLED_HAM\r\n3 - PULLED_GROIN\r\n4 - PULLED_HIP_FLEXOR\r\n5 - TORN_CALF\r\n6 - TORN_QUAD\r\n7 - TORN_HAM\r\n8 - TORN_GROIN\r\n9 - TORN_HIP_FLEXOR\r\n\r\nLow fatigue (max gauge) [0.0 .. 1.0] High fatigue (min gauge)"
				},
				{
					"PropertyName": "Injury_MaxForceForBodyJoint",
					"Description": "Normalize force between 0 and max (this value)\r\n\r\n0 - INJURY_JOINT_ANKLE\r\n1 - INJURY_JOINT_KNEE\r\n2 - INJURY_JOINT_ELBOW\r\n3 - INJURY_JOINT_SHOULDER\r\n"
				},
				{
					"PropertyName": "Injury_MaxForceForBodyPart",
					"Description": "Normalize force between 0 and max (this value)\r\n\r\n0 - INJURY_PART_FOOT\r\n1 - INJURY_PART_LEG\r\n2 - INJURY_PART_UPPERLEG\r\n3 - INJURY_PART_FOREARM\r\n4 - INJURY_PART_ARM\r\n5 - INJURY_PART_HEAD\r\n6 - INJURY_PART_TORSO\r\n7 - INJURY_PART_HIPS\r\n"
				},
				{
					"PropertyName": "Injury_MaxTorqueForBodyJoint",
					"Description": "Normalize torque force between 0 and max (this value)\r\n\r\n0 - INJURY_JOINT_ANKLE\r\n1 - INJURY_JOINT_KNEE\r\n2 - INJURY_JOINT_ELBOW\r\n3 - INJURY_JOINT_SHOULDER\r\n"
				},
				{
					"PropertyName": "Injury_MinForceForBodyJoint",
					"Description": "Normalize force between min (this value) and max\r\n\r\n0 - INJURY_JOINT_ANKLE\r\n1 - INJURY_JOINT_KNEE\r\n2 - INJURY_JOINT_ELBOW\r\n3 - INJURY_JOINT_SHOULDER\r\n"
				},
				{
					"PropertyName": "Injury_MinForceForBodyPart",
					"Description": "Normalize force between min (this value) and max\r\n\r\n0 - INJURY_PART_FOOT\r\n1 - INJURY_PART_LEG\r\n2 - INJURY_PART_UPPERLEG\r\n3 - INJURY_PART_FOREARM\r\n4 - INJURY_PART_ARM\r\n5 - INJURY_PART_HEAD\r\n6 - INJURY_PART_TORSO\r\n7 - INJURY_PART_HIPS\r\n"
				},
				{
					"PropertyName": "Injury_MinTorqueForBodyJoint",
					"Description": "Normalize torque force between min (this value) and max\r\n\r\n0 - INJURY_JOINT_ANKLE\r\n1 - INJURY_JOINT_KNEE\r\n2 - INJURY_JOINT_ELBOW\r\n3 - INJURY_JOINT_SHOULDER\r\n"
				},
				{
					"PropertyName": "Injury_PlayerAttributesMaximumReductionRate",
					"Description": "We'll decrease the player attributes by injuries so this value is maximum % of the reduction."
				},
				{
					"PropertyName": "Injury_probabilityTableForLight",
					"Description": "injury probability table for light injury."
				},
				{
					"PropertyName": "Injury_probabilityTableForMiddle",
					"Description": "injury probability table for middle injury."
				},
				{
					"PropertyName": "Injury_probabilityTableForSevere",
					"Description": "probability table for severe injury, 1.0 means 100%, 0.1 means 10%."
				},
				{
					"PropertyName": "Injury_SprintMinMaxTime",
					"Description": "Sprint time which causes some injuries when a player is sprinting for a long time.\r\n0 - min time [ticks]\r\n1 - max time [ticks]\r\nInterpolate probability/chance between min and max"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_evaluation_pr_categorizedscore_weight",
			"Properties": [
				{
					"PropertyName": "weight",
					"Description": "Weight for categorized scores to summarize final rating.\r\n0:dribble, 1:pass, 2:shot, 3:defense, 4:contribution, 5:flair, 6:offense posisitioning, 7:defense positioning.\r\nTotal has to be 1.0"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_defense_blockintercept",
			"Properties": [
				{
					"PropertyName": "BlockForceMinDistanceFromOpponent",
					"Description": "Minimum about of distance away from the opponent before turning a stand tackle into block.\r\n0: Moving towards ball\r\n1: Moving away from ball"
				},
				{
					"PropertyName": "BlockGoalLineMaxDistance",
					"Description": "The maximum distance we should try to block the ball in goal line situation"
				},
				{
					"PropertyName": "BlockHighDerterminationAggressionThreshold",
					"Description": "Threshold to reach to use high determination block asset"
				},
				{
					"PropertyName": "BlockHighDerterminationAgilityThreshold",
					"Description": "Threshold to reach to use high determination block asset"
				},
				{
					"PropertyName": "InterceptCostFactorAngle",
					"Description": "The penalty associated with the extnet of the turn angle required to intercept the ball."
				},
				{
					"PropertyName": "InterceptCostFactorHeight",
					"Description": "The penalty associated with hitting a ball higher in the air."
				},
				{
					"PropertyName": "InterceptCostFactorTime",
					"Description": "The penalty associated with the time required to intercept the ball."
				},
				{
					"PropertyName": "InterceptCostFactorXZ",
					"Description": "The penalty associated with the displacement in XZ space required to intercept the ball."
				},
				{
					"PropertyName": "InterceptJogSpeed",
					"Description": "The speed that needs to be reached for a running tackle to be launched."
				},
				{
					"PropertyName": "InterceptMinStrafeSpeed",
					"Description": "The speed that needs to be reached for a running tackle to be launched."
				},
				{
					"PropertyName": "InterceptRunSpeed",
					"Description": "The speed that needs to be reached for a running tackle to be launched."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_cpuai_cpuaipredictionpoints",
			"Properties": [
				{
					"PropertyName": "PredictionPointMinMovementDelta",
					"Description": "This contributes to how much the dribbler wants to move the ball forward. Increasing the value should reduce how much the dribbler passes backward."
				},
				{
					"PropertyName": "PredictionPointMaxMovementDistance",
					"Description": "This value represents how much the dribbler considers to be a lot of movement. Increasing this value will make the dribbler less sensitive about moving the ball forward or backward. Conversely, if you decrease this value then the dribbler will be more careful about passing the ball back, or passing it forward."
				},
				{
					"PropertyName": "PredictionPointMaxSpaceDistance",
					"Description": "When calculating prediction points, this value is used to determine what at value a player considers to have the optimim amount of space. For example. if this value is 70 feet, the player will consider his space rating to be 1.0 if there is no defender closer than 70 feet from him. Dependant on AttackPace."
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_cpuai_cpuaithroughpass",
			"Properties": [
				{
					"PropertyName": "CPUAI_ThroughPassSafety_DefenderDistBonusBasedOnApproachAngle",
					"Description": "x is the angle between receiver to ball to defender...  (ie: 180 is when the defender is coming from goal side)\r\ny is the distance bonus we give the defender.. to discourage passes where we are slightly closer than the opponent but he is goalside and will be able to tackle us immediately (vs chasing)."
				},
				{
					"PropertyName": "CPUAI_ThroughPassSafety_DefenderTimeBonusBasedOnApproachAngle",
					"Description": "x is the angle between receiver to ball to defender...  (ie: 180 is when the defender is coming from goal side)\r\ny is the distance bonus we give the defender.. to discourage passes where we are slightly closer than the opponent but he is goalside and will be able to tackle us immediately (vs chasing)."
				},
				{
					"PropertyName": "CPUAI_ThroughPassSafety_Distance",
					"Description": "x is the difference in distance (negative means im closer.. positive means defender is closeR)\r\ny is the safety rate"
				},
				{
					"PropertyName": "CPUAI_ThroughPassSafety_Time",
					"Description": "x is the difference in time (used by vision players) (negative means im closer.. positive means defender is closer)\r\n\r\ny is the safety rate"
				}
			]
		},
		{
			"TypeName": "AttribSchema_gp_defense_sealout",
			"Properties": [
				{
					"PropertyName": "SealOut_AttackingTouchTimeThreshold",
					"Description": "If your player is going to get to the ball more than this many ticks before his opponent, do not allow a seal out. This applies only in attacking situations (you are in the box, or are moving in an attacking direction towards the ball on the attacking third). Other situations use the default tuning for contextual and user requested seal outs.\r\n\r\nUse a negative value if you want to ensure you can only seal out if your are getting to the ball X ticks AFTER the opponent."
				}
			]
		}
	]
}